generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model Order {
  id                String  @id @default(cuid())
  trackingCode      String?
  paymentStatus     String?
  status            String?
  paymentMethod     String
  zipcode String
  state String
  city String
  neighborhood String
  street String
  number String
  complement String?
  createdAt DateTime @default(now())
  
  userId  String?
  user    User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  products OrderProduct[]

  @@index(userId)
}

model OrderProduct {
  id                String  @id @default(cuid())
  name String
  slug String
  price Decimal
  quantity Int
  thumb String
  
  orderId  String?
  order    Order?   @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@index(orderId)
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index(userId)
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index(userId)
}

model User {
  id            String    @id @default(cuid())
  name String
  email         String?   @unique
  phone String
  role         String? @default("customer")
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  orders   Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}